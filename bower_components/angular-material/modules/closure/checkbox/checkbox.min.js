/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.2.0-master-93518bb
 */
function MdCheckboxDirective(g,p,h,f,k,v){return g=g[0],{restrict:"E",transclude:!0,require:["^?mdInputContainer","?ngModel","?^form"],priority:h.BEFORE_NG_ARIA,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"></div></div><div ng-transclude class="md-label"></div>',compile:function(e,t){return t.$set("tabindex",t.tabindex||"0"),t.$set("type","checkbox"),t.$set("role",t.type),e.addClass("md-auto-horizontal-margin"),{pre:function(e,t){t.on("click",function(e){this.hasAttribute("disabled")&&e.stopImmediatePropagation()})},post:function(i,a,c,e){var t,n=e[0],o=e[1]||k.fakeNgModel(),r=e[2],d=0<a.find("a").length;if(d){var l="label-"+k.nextUid();c.$set("aria-labelledby",l);var s=a.children()[1];angular.element(s).remove(),s.removeAttribute("ng-transclude"),s.className="md-checkbox-link-label",s.setAttribute("id",l),a.after(s),a.next().on("click",m)}if(n){var u=n.isErrorGetter||function(){return o.$invalid&&(o.$touched||r&&r.$submitted)};n.input=a,i.$watch(u,n.setInvalid)}f(a),a.children().on("focus",function(){a.focus()}),k.parseAttributeBoolean(c.mdIndeterminate)&&(b(),i.$watch(c.mdIndeterminate,b));c.ngChecked&&i.$watch(i.$eval.bind(i,c.ngChecked),function(e){o.$setViewValue(e),o.$render()});(function(e,t,n){c[e]&&i.$watch(c[e],function(e){n[e]&&a.attr(t,n[e])})})("ngDisabled","tabindex",{true:"-1",false:c.tabindex}),d||p.expectWithText(a,"aria-label");function m(t){a[0].hasAttribute("disabled")||i.skipToggle||"A"===t.target.tagName||i.$apply(function(){var e=c.ngChecked&&c.ngClick?c.checked:!o.$viewValue;o.$setViewValue(e,t&&t.type),o.$render()})}function b(e){(t=!1!==e)&&a.attr("aria-checked","mixed"),a.toggleClass("md-indeterminate",t)}g.link.pre(i,{on:angular.noop,0:{}},c,[o]),a.on("click",m).on("keypress",function(e){var t,n,i=e.which||e.keyCode;switch(e.preventDefault(),i){case h.KEY_CODE.SPACE:a.addClass("md-focused"),m(e);break;case h.KEY_CODE.ENTER:(n=k.getClosest(e.target,"form"))&&(t=n.querySelector('button[type="submit"]:enabled, input[type="submit"]:enabled'))&&t.click()}}).on("focus",function(){"keyboard"===v.getLastInteractionType()&&a.addClass("md-focused")}).on("blur",function(){a.removeClass("md-focused")}),o.$render=function(){a.toggleClass("md-checked",!!o.$viewValue&&!t)}}}}}}goog.provide("ngmaterial.components.checkbox"),goog.require("ngmaterial.core"),MdCheckboxDirective.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$mdInteraction"],angular.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",MdCheckboxDirective),ngmaterial.components.checkbox=angular.module("material.components.checkbox");